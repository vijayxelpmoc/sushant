service: palette-todo-service
useDotenv: true

plugins:
  - serverless-offline
  - serverless-deployment-bucket

provider:
  name: aws
  runtime: nodejs12.x
  region: ${env:PALETTE_AWS_REGION}
  apiGateway:
    minimumCompressionSize: 1024
    restApiId: ${env:PALETTE_API_GATEWAY_ID}
    restApiRootResourceId: ${env:PALETTE_API_GATEWAY_ROOT_ID}
  deploymentBucket:
    name: ${env:PALETTE_AWS_STORAGE_BUCKET_NAME}
    serverSideEncryption: AES256
  iamManagedPolicies:
    - 'arn:aws:iam::aws:policy/AmazonSQSFullAccess'
  environment:
    PORT: ${env:PORT}
    NODE_ENV: ${env:NODE_ENV}
    JWT_SECRET: ${env:JWT_SECRET}
    SALESFORCE_GRANT_TYPE: ${env:SALESFORCE_GRANT_TYPE}
    SALESFORCE_CLIENT_ID: ${env:SALESFORCE_CLIENT_ID}
    SALESFORCE_CLIENT_SECRET: ${env:SALESFORCE_CLIENT_SECRET}
    SALESFORCE_USERNAME: ${env:SALESFORCE_USERNAME}
    SALESFORCE_PASSWORD: ${env:SALESFORCE_PASSWORD}
    BE_SUPPORT_EMAILS: ${env:BE_SUPPORT_EMAILS}
    UTILITY_NOTIFICATION_RECIPIENTS: ${env:UTILITY_NOTIFICATION_RECIPIENTS}
    PALETTE_SERVICE_NAME: ${env:PALETTE_SERVICE_NAME}
    PALETTE_AWS_SQS_NOTIFICATION_QUEUE_URL: ${env:PALETTE_AWS_SQS_NOTIFICATION_QUEUE_URL}
    PALETTE_AWS_REGION: ${env:PALETTE_AWS_REGION}
    AWS_NODEJS_CONNECTION_REUSE_ENABLED: ${env:AWS_NODEJS_CONNECTION_REUSE_ENABLED}

functions:
  todo:
    handler: dist/lambda.handler
    events:
      - http:
          method: GET
          path: todo
          cors: true
      - http:
          method: POST
          path: todo/event
          cors: true
      - http:
          method: POST
          path: todo/draft
          cors: true
      - http:
          method: POST
          path: todo/requested/accept/{id} 
          request: 
            parameters:
              paths: 
                id: true
          cors: true
      - http:
          method: POST
          path: todo/requested/reject/{id}
          request: 
            parameters:
              paths: 
                id: true
          cors: true
      - http:
          method: GET
          path: todo/detail/{id}
          request: 
            parameters:
              paths: 
                id: true
          cors: true
      - http:
          method: POST
          path: todo/requested/bulk/accept
          cors: true
      - http:
          method: PATCH
          path: todo/update/status/{id}
          request: 
            parameters:
              paths: 
                id: true
          cors: true
      - http:
          method: POST
          path: todo/requested/bulk/reject
          cors: true
      - http:
          method: GET
          path: todo/recepients/get
          cors: true
      - http:
          method: POST
          path: todo/todoresources
          cors: true
      - http:
          method: DELETE
          path: todo/deleteAll
          cors: true
      - http:
          method: PATCH
          path: todo/update/todo
          cors: true
      - http:
          method: PATCH
          path: todo/update/bulk/status
          cors: true
      - http:
          method: POST
          path: todo/create
          cors: true
      - http:
          method: GET
          path: todo/requested/pending
          cors: true
      - http:
          method: GET
          path: todo/task/{studentid}
          request: 
            parameters:
              paths: 
                studentid: true
          cors: true
      - http:
          method: PATCH
          path: todo/publish/draft
          cors: true
      - http:
          method: PATCH
          path: todo/publish/bulk
          cors: true
